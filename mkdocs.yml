# Copyright 2019 ConsenSys AG.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
# an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.

# Project information
site_name: "Tessera"
site_url: https://docs.tessera.consensys.net/
site_description: Tessera is an open-source private transaction manager developed under the Apache 2.0 license and written in Java.
site_author: Tessera community
copyright: Tessera is licensed under Apache 2.0 License /
  This documentation is maintained by <a href="https://consensys.net/">ConsenSys</a>.

#extra project info and template customisation
extra:
  logo_is_text: true
  latest_version_warning:
    url_contains: /latest/
    text: 'You are reading GoQuorum development version documentation and
    some displayed features may not be available in the stable release.
    You can switch to stable version using the version box at screen bottom.'
  support:
    company: ConsenSys
    tool: Slack
    faq: https://consensys.net/quorum/faq
    channel: https://93ecjxb0d3.execute-api.us-east-1.amazonaws.com/Express/
    email: quorum@consensys.net
    website: https://consensys.net/
    issues: https://github.com/ConsenSys/tessera/issues
  google:
    site_verification: 'VL2MgMm7Gj-fEOH3SkAuP4eXOY7rIShFFbTI5RktuA0'
    tag_manager: 'GTM-N4VQ49H'
  inverted_logo: 'images/inverted_logo.svg'

# Software Repository
repo_name: Consensys/tessera
repo_url: https://github.com/ConsenSys/tessera.git

theme:
  name: material
  custom_dir: common/custom_theme
  font:
    text: 'Roboto'
    code: 'Roboto Mono'
  language: 'en'
  logo: 'images/logo.svg'
  favicon: 'images/favicon.svg'

nav:
  - How to:
    - Get started with Tessera:
      - Install Tessera:
        - Run Tessera from Docker image: HowTo/Get-started/Install/Docker-Images.md
        - Install binary distribution: HowTo/Get-started/Install/Distribution.md
        - Build from source: HowTo/Get-started/Install/Build-From-Source.md
      - Start Tessera: HowTo/Get-started/Start-Tessera.md
      - Use GoQuorum or Besu with Tessera: HowTo/Get-started/Use-GoQuorum-with-Tessera.md
    - Generate keys:
      - Generate keys with Tessera: HowTo/Generate-Keys/Generate-Keys.md
      - File-based keys: HowTo/Generate-Keys/File-Stored-Keys.md
      - HashiCorp Vault: HowTo/Generate-Keys/Hashicorp-Vault.md
      - Azure Key Vault: HowTo/Generate-Keys/Azure-Key-Vault.md
      - AWS Secrets Manager: HowTo/Generate-Keys/AWS-Secrets-Manager.md
    - Generate certificates: HowTo/Generate-certificates.md
    - Configure:
      - Overview: HowTo/Configure/Tessera.md
      - Enclave: HowTo/Configure/Enclave.md
      - Keys:
         - Overview: HowTo/Configure/Keys/Overview.md
         - Direct keys: HowTo/Configure/Keys/Direct-Key-Pairs.md
         - Inline keys: HowTo/Configure/Keys/Inline-Key-Pairs.md
         - File-based keys: HowTo/Configure/Keys/File-Based-Key-Pairs.md
         - Azure Key Vault keys: HowTo/Configure/Keys/Azure-Key-Vault-Pairs.md
         - AWS Secret Manager keys: HowTo/Configure/Keys/AWS-Secrets-Pairs.md
         - HashiCorp Vault keys: HowTo/Configure/Keys/Hashicorp-Vault-Pairs.md
         - Secure keys using Argon2: HowTo/Configure/Keys/Secure-Keys.md
      - Key vault:
          - Azure Key Vault: HowTo/Configure/KeyVault/Azure-Key-Vault.md
          - AWS Secrets Manager: HowTo/Configure/KeyVault/AWS-Secrets-Manager.md
          - HashiCorp Vault: HowTo/Configure/KeyVault/Hashicorp-Vault.md
      - Servers: HowTo/Configure/TesseraAPI.md
      - Peer discovery: HowTo/Configure/Peer-discovery.md
      - TLS: HowTo/Configure/TLS.md
      - Database: HowTo/Configure/Database.md
      - Multiple private states: HowTo/Configure/Multiple-private-state.md
      - Cryptographic elliptic curves: HowTo/Configure/Cryptographic-elliptic-curves.md
      - Hyperledger Besu support: HowTo/Configure/Orion-Mode.md
      - Override configuration file: HowTo/Configure/Override-config.md
      - High availability: HowTo/Configure/High-availability.md
    - Use:
      - Monitoring: HowTo/Use/Monitoring.md
      - Logging: HowTo/Use/Logging.md
      - Mandatory recipients: HowTo/Use/Mandatory-Recipients.md
      - Data recovery: HowTo/Use/Data-Recovery.md
    - Migrate:
      - Migrate from Orion: HowTo/Migrate/MigrateFromOrion.md
      - Multi-tenancy migration: HowTo/Migrate/Migration-Multitenancy.md
  - Tutorials:
      - Quorum Developer Quickstart: Tutorials/Quorum-Dev-Quickstart.md
  - Concepts:
    - Privacy manager:
        - Overview: Concepts/Privacy-Manager/Privacy-manager.md
        - Transaction manager: Concepts/Privacy-Manager/Transaction-manager.md
        - Enclave: Concepts/Privacy-Manager/Enclave.md
        - Enclave types: Concepts/Privacy-Manager/Enclave-types.md
    - Peer discovery: Concepts/p2p-discovery.md
    - Privacy groups: Concepts/Privacy-Groups.md
    - Multi-tenancy: Concepts/Multitenancy.md
    - Tessera API: Concepts/TesseraAPI.md
  - Reference:
    - Command line:
      - Options: Reference/CLI/CLI-Syntax.md
      - Subcommands: Reference/CLI/CLI-Subcommands.md
    - Configuration file: Reference/SampleConfiguration.md
    - Bootstrap node configuration file: Reference/BootstrapSampleConfiguration.md
    - REST API Methods: Reference/REST-API.md

markdown_extensions:
  - toc:
      permalink: ÔÉÅ
      toc_depth: 4
  - codehilite
  - pymdownx.tabbed
  - pymdownx.superfences
  - markdown_include.include:
      base_path: docs
  - admonition
  - footnotes
  - def_list
  - abbr
  - pymdownx.arithmatex
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.keys
  - pymdownx.details
  - pymdownx.emoji
  - pymdownx.magiclink
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.tilde
  - meta
  - smarty
  - attr_list
  - plantuml_markdown:
      server: http://www.plantuml.com/plantuml

plugins:
  - search:
      lang: 'en'
      separator: '[\s]+'
  - markdownextradata
  - redirects:
      redirect_maps:
        # Configure redirects using key:value pairs:
        # old_path.md: new_path.md
        # you can't use an already redirected path as an old_path.
        # new_path can be a file inside the docs/ folder or any URL (http://...)
        HowTo/Generate-keys.md: index.md
        HowTo/Configure/Keys.md: HowTo/Configure/Keys/Overview.md
        Tutorials/Migration-Multitenancy.md: HowTo/Migrate/Migration-Multitenancy.md
        HowTo/Get-started/DistributionJar.md: HowTo/Get-started/Install/Distribution.md
        HowTo/Use/Add-peer.md: Concepts/p2p-discovery.md
        Concepts/Privacy-manager.md: Concepts/Privacy-Manager/Privacy-manager.md
        Concepts/Transaction-manager.md: Concepts/Privacy-Manager/Transaction-manager.md
        Concepts/Enclave.md: Concepts/Privacy-Manager/Enclave.md
        Concepts/Enclave-types.md: Concepts/Privacy-Manager/Enclave-types.md
        HowTo/Configure/Transaction-Manager.md: HowTo/Configure/Tessera.md
        HowTo/Configure/Data-Recovery.md: HowTo/Use/Data-Recovery.md
        HowTo/Get-started/Dependencies.md: HowTo/Get-started/Install/Distribution.md
        HowTo/Get-started/Docker-Images.md: HowTo/Get-started/Install/Docker-Images.md
        HowTo/Get-started/Distribution.md: HowTo/Get-started/Install/Distribution.md
        HowTo/Get-started/Build-From-Source.md: HowTo/Get-started/Install/Build-From-Source.md
